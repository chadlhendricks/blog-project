{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/chadl/Music/blog-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nexport default {\n  data: function data() {\n    return {\n      blogs: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (localStorage.getItem(\"jwt\")) {\n      fetch(\"https://generic-blog-api.herokuapp.com/posts\", {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n          Authorization: \"Bearer \".concat(localStorage.getItem(\"jwt\"))\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this.blogs = json;\n\n        _this.blogs.forEach( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(blog) {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return fetch(\"https://generic-blog-api.herokuapp.com/users/\" + blog.author, {\n                      method: \"GET\",\n                      headers: {\n                        \"Content-type\": \"application/json; charset=UTF-8\",\n                        Authorization: \"Bearer \".concat(localStorage.getItem(\"jwt\"))\n                      }\n                    }).then(function (response) {\n                      return response.json();\n                    }).then(function (json) {\n                      blog.author_name = json.name;\n                    });\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      })[\"catch\"](function (err) {\n        alert(\"User not logged in\");\n      });\n    } else {\n      alert(\"User not logged in\");\n      this.$router.push({\n        name: \"Login\"\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;AACA,eAAe;AACbA,MADa,kBACN;AACL,WAAO;AACLC,WAAK,EAAE;AADF,KAAP;AAGD,GALY;AAMbC,SANa,qBAMH;AAAA;;AACR,QAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC/BC,WAAK,CAAC,8CAAD,EAAiD;AACpDC,cAAM,EAAE,KAD4C;AAEpDC,eAAO,EAAE;AACP,0BAAgB,iCADT;AAEPC,uBAAa,mBAAYL,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AAFN;AAF2C,OAAjD,CAAL,CAOGK,IAPH,CAOQ,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OAPR,EAQGF,IARH,CAQQ,UAACE,IAAD,EAAU;AACd,aAAI,CAACV,KAAL,GAAaU,IAAb;;AACA,aAAI,CAACV,KAAL,CAAWW,OAAX;AAAA,6EAAmB,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACXR,KAAK,CACT,kDAAkDQ,IAAI,CAACC,MAD9C,EAET;AACER,4BAAM,EAAE,KADV;AAEEC,6BAAO,EAAE;AACP,wCAAgB,iCADT;AAEPC,qCAAa,mBAAYL,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AAFN;AAFX,qBAFS,CAAL,CAUHK,IAVG,CAUE,UAACC,QAAD;AAAA,6BAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,qBAVF,EAWHF,IAXG,CAWE,UAACE,IAAD,EAAU;AACdE,0BAAI,CAACE,WAAL,GAAmBJ,IAAI,CAACK,IAAxB;AACD,qBAbG,CADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAnB;;AAAA;AAAA;AAAA;AAAA;AAgBD,OA1BH,WA2BS,UAACC,GAAD,EAAS;AACdC,aAAK,CAAC,oBAAD,CAAL;AACD,OA7BH;AA8BD,KA/BD,MA+BO;AACLA,WAAK,CAAC,oBAAD,CAAL;AACA,WAAKC,OAAL,CAAaC,IAAb,CAAkB;AAAEJ,YAAI,EAAE;AAAR,OAAlB;AACD;AACF;AA1CY,CAAf","names":["data","blogs","mounted","localStorage","getItem","fetch","method","headers","Authorization","then","response","json","forEach","blog","author","author_name","name","err","alert","$router","push"],"sourceRoot":"","sources":["C:/Users/chadl/Music/blog-project/src/views/Blogs.vue"],"sourcesContent":["\r\nexport default {\r\n  data() {\r\n    return {\r\n      blogs: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    if (localStorage.getItem(\"jwt\")) {\r\n      fetch(\"https://generic-blog-api.herokuapp.com/posts\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          this.blogs = json;\r\n          this.blogs.forEach(async (blog) => {\r\n            await fetch(\r\n              \"https://generic-blog-api.herokuapp.com/users/\" + blog.author,\r\n              {\r\n                method: \"GET\",\r\n                headers: {\r\n                  \"Content-type\": \"application/json; charset=UTF-8\",\r\n                  Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n                },\r\n              }\r\n            )\r\n              .then((response) => response.json())\r\n              .then((json) => {\r\n                blog.author_name = json.name;\r\n              });\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          alert(\"User not logged in\");\r\n        });\r\n    } else {\r\n      alert(\"User not logged in\");\r\n      this.$router.push({ name: \"Login\" });\r\n    }\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}